{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getRandomInt","max","Math","floor","random","shuffleArray","equationsArray","i","length","j","temp","handleAnswerOptionClick","evaluated","setState","score","state","nextQuestion","currentQuestion","showScore","stopTimer","setStartPage","value","startPage","seconds","questions","playAgain","bind","assertThisInitialized","intervalId","firstNumber","secondNumber","equationObject","wrongFormat","correctEquations","console","log","wrongEquations","equationValue","concat","push","startTimer","_this2","setInterval","clearInterval","_this3","react_default","a","createElement","className","onClick","id","toFixed","React","Component","ReactDOM","render","StrictMode","App_App","document","getElementById"],"mappings":"2MAEqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAeRQ,aAAe,SAACC,GACd,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,KAjB5BR,EAqBnBY,aAAe,SAACC,GAEd,IADA,IAAIC,EAAID,EAAeE,OAAS,EACzBD,EAAI,EAAGA,IAAK,CACjB,IAAME,EAAIP,KAAKC,MAAMD,KAAKE,UAAYG,EAAI,IACpCG,EAAOJ,EAAeC,GAC5BD,EAAeC,GAAKD,EAAeG,GACnCH,EAAeG,GAAKC,EAEtB,OAAOJ,GA7BUb,EAuEnBkB,wBAA0B,SAACC,IACP,IAAdA,GACFnB,EAAKoB,SAAS,CAACC,MAAOrB,EAAKsB,MAAMD,MAAQ,IAE3C,IAAME,EAAevB,EAAKsB,MAAME,gBAAkB,EAC9CD,EAAevB,EAAKsB,MAAMT,eAAeE,OAC3Cf,EAAKoB,SAAS,CAACI,gBAAiBD,KAEhCvB,EAAKoB,SAAS,CAACK,WAAW,IAC1BzB,EAAK0B,cAhFU1B,EAiGnB2B,aAAe,SAACC,GACd5B,EAAKoB,SAAS,CAACS,UAAWD,KAhG1B5B,EAAKsB,MAAQ,CACXE,gBAAiB,EACjBH,MAAO,EACPI,WAAW,EACXI,WAAW,EACXC,QAAS,EACTjB,eAAgBb,EAAK+B,aAGvB/B,EAAKgC,UAAYhC,EAAKgC,UAAUC,KAAfhC,OAAAiC,EAAA,EAAAjC,QAAAiC,EAAA,EAAAjC,CAAAD,KACjBA,EAAKmC,WAAa,EAZDnC,2EAkCjB,IACIa,EAAiB,GACjBuB,EAAc,EACdC,EAAe,EACfC,EAAiB,GACjBC,EAAc,GACZC,EAAmBrC,KAAKI,aANP,IAOvBkC,QAAQC,IAAI,qBAAsBF,GAElC,IAAMG,EATiB,GASiBH,EACxCC,QAAQC,IAAI,mBAAoBC,GAEhC,IAAK,IAAI7B,EAAI,EAAGA,EAAI0B,EAAkB1B,IAAK,CAGzC,IAAM8B,GAFNR,EAAcjC,KAAKI,aAAa,KAChC8B,EAAelC,KAAKI,aAAa,IAGjC+B,EAAiB,CAAEV,MADL,GAAAiB,OAAMT,EAAN,OAAAS,OAAuBR,EAAvB,OAAAQ,OAAyCD,GACnBzB,WAAW,GAC/CN,EAAeiC,KAAKR,GAGtB,IAAK,IAAIxB,EAAI,EAAGA,EAAI6B,EAAgB7B,IAAK,CAGvC,IAAM8B,GAFNR,EAAcjC,KAAKI,aAAa,KAChC8B,EAAelC,KAAKI,aAAa,IAEjCgC,EAAY,GAAZ,GAAAM,OAAoBT,EAApB,OAAAS,OAAqCR,EAAe,EAApD,OAAAQ,OAA2DD,GAC3DL,EAAY,GAAZ,GAAAM,OAAoBT,EAApB,OAAAS,OAAqCR,EAArC,OAAAQ,OAAuDD,EAAgB,GACvEL,EAAY,GAAZ,GAAAM,OAAoBT,EAAc,EAAlC,OAAAS,OAAyCR,EAAzC,OAAAQ,OAA2DD,GAG3DN,EAAiB,CAAEV,MADFW,EADIpC,KAAKI,aAAa,IAEHY,WAAW,GAC/CN,EAAeiC,KAAKR,GAEtB,OAAOnC,KAAKS,aAAaC,uCAmBzBV,KAAKiB,SAAS,CACZK,WAAW,EACXD,gBAAiB,EACjBH,MAAO,EACPR,eAAgBV,KAAK4B,YACrBD,QAAS,IAEX3B,KAAK4C,kDAUM,IAAAC,EAAA7C,KACXA,KAAKgC,WAAac,YAAY,WAC5BD,EAAK5B,SAAS,CAACU,QAASkB,EAAK1B,MAAMQ,QAAU,KAC5C,yCAIHoB,cAAc/C,KAAKgC,6CAIZ,IAAAgB,EAAAhD,KACP,OACEiD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGZpD,KAAKmB,MAAMO,WACZuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,uBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,iDACAH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,WAEbL,EAAKxB,cAAa,GAClBwB,EAAKJ,eAHT,eASA5C,KAAKmB,MAAMO,WAAc1B,KAAKmB,MAAMG,UAapC,GAXA2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBE,GAAG,oBACnCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZpD,KAAKmB,MAAMT,eAAeV,KAAKmB,MAAME,iBAAiBI,QAG5DwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAML,EAAKjC,yBAA4F,IAApEiC,EAAK7B,MAAMT,eAAesC,EAAK7B,MAAME,iBAAiBL,aAA1G,QACAiC,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAML,EAAKjC,yBAA4F,IAApEiC,EAAK7B,MAAMT,eAAesC,EAAK7B,MAAME,iBAAiBL,aAA1G,WAMJhB,KAAKmB,MAAMO,WAAa1B,KAAKmB,MAAMG,UACnC2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,cAAyCpD,KAAKmB,MAAMD,MAApD,WAAmElB,KAAKmB,MAAMT,eAAeE,QAC7FqC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,SAA8BpD,KAAKmB,MAAMQ,QAAQ4B,QAAQ,GAAzD,MACAN,EAAAC,EAAAC,cAAA,UAAQE,QAASrD,KAAK6B,WAAtB,8BAED,WA3JuB2B,IAAMC,WCIvCC,IAASC,OACPV,EAAAC,EAAAC,cAACF,EAAAC,EAAMU,WAAP,KACEX,EAAAC,EAAAC,cAACU,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.7e141304.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentQuestion: 0,\n      score: 0,\n      showScore: false,\n      startPage: true,\n      seconds: 0,\n      equationsArray: this.questions()\n      \n    }\n    this.playAgain = this.playAgain.bind(this);\n    this.intervalId = 0;\n  }\n  \n  // Get Random Number up to a Max Number\n  getRandomInt = (max) =>  {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  // Shuffle Array\n  shuffleArray = (equationsArray) => {\n    let i = equationsArray.length - 1;\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = equationsArray[i];\n      equationsArray[i] = equationsArray[j];\n      equationsArray[j] = temp;\n    }\n    return equationsArray;\n  }\n\n  // Create a new array\n  questions() {\n    const questionAmount = 10;\n    let equationsArray = [];\n    let firstNumber = 0;\n    let secondNumber = 0;\n    let equationObject = {};\n    let wrongFormat = [];\n    const correctEquations = this.getRandomInt(questionAmount);\n    console.log('correct equations:', correctEquations);\n    // Set amount of wrong equations\n    const wrongEquations = questionAmount - correctEquations;\n    console.log('wrong equations:', wrongEquations);\n    // Loop through, multiply random numbers up to 9, push to array\n    for (let i = 0; i < correctEquations; i++) {\n      firstNumber = this.getRandomInt(9);\n      secondNumber = this.getRandomInt(9);\n      const equationValue = firstNumber * secondNumber;\n      const equation = `${firstNumber} x ${secondNumber} = ${equationValue}`;\n      equationObject = { value: equation, evaluated: true };\n      equationsArray.push(equationObject);\n    }\n    // Loop through, mess with the equation results, push to array\n    for (let i = 0; i < wrongEquations; i++) {\n      firstNumber = this.getRandomInt(9);\n      secondNumber = this.getRandomInt(9);\n      const equationValue = firstNumber * secondNumber;\n      wrongFormat[0] = `${firstNumber} x ${secondNumber + 1} = ${equationValue}`;\n      wrongFormat[1] = `${firstNumber} x ${secondNumber} = ${equationValue - 1}`;\n      wrongFormat[2] = `${firstNumber + 1} x ${secondNumber} = ${equationValue}`;\n      const formatChoice = this.getRandomInt(2);\n      const equation = wrongFormat[formatChoice];\n      equationObject = { value: equation, evaluated: false };\n      equationsArray.push(equationObject);\n    }\n    return this.shuffleArray(equationsArray);\n  }\n\n\n  handleAnswerOptionClick = (evaluated) => {\n    if (evaluated === true) {\n      this.setState({score: this.state.score + 1});\n    }\n    const nextQuestion = this.state.currentQuestion + 1;\n    if (nextQuestion < this.state.equationsArray.length) {\n      this.setState({currentQuestion: nextQuestion});\n    } else {\n      this.setState({showScore: true});\n      this.stopTimer();\n    }\n  };\n\n  // Play again button\n  playAgain() {\n    this.setState({\n      showScore: false,\n      currentQuestion: 0,\n      score: 0,\n      equationsArray: this.questions(),\n      seconds: 0,\n    });\n    this.startTimer();\n  }\n\n  // Changing Start Page Value\n  setStartPage = (value) =>  {\n    this.setState({startPage: value})\n  }\n\n\n  // Timer\n  startTimer() {\n    this.intervalId = setInterval(() => {\n      this.setState({seconds: this.state.seconds + 1})\n    }, 1000) \n  }\n\n  stopTimer() {\n    clearInterval(this.intervalId);\n  }\n\n\n  render() {\n    return (\n      <div className='app'>\n       \n        {/* Start Page */}\n        {this.state.startPage &&\n        <div className='start-page'>\n          <span className='start-text'>Multiplication Game</span>\n          <span className='instructions'>Evaluate the equation: Faux(False) Vrai(True)</span>\n          <button onClick={() => \n            {\n              this.setStartPage(false);\n              this.startTimer();\n            }}>Start Game</button>\n        </div>\n        }\n  \n        {/* Question Page */}\n        {!this.state.startPage && !this.state.showScore \n        ?\n          <div className='question-page'>  \n             <div className='question-section' id='question-section'>\n               <div className='question-text'>\n                 {this.state.equationsArray[this.state.currentQuestion].value}\n              </div>\n            </div>\n            <div className='answer-section'>\n              <button onClick={() => this.handleAnswerOptionClick(this.state.equationsArray[this.state.currentQuestion].evaluated === false)}>Faux</button>\n              <button onClick={() => this.handleAnswerOptionClick(this.state.equationsArray[this.state.currentQuestion].evaluated === true)}>Vrai</button>\n            </div>\n          </div>\n        : ''}      \n\n        {/* Score Page */}\n        {!this.state.startPage && this.state.showScore ? \n          <div className='score-section'>\n           <span className='score-text'>You scored {this.state.score} out of {this.state.equationsArray.length}</span>\n           <span className='time'>Time: {this.state.seconds.toFixed(1)}'s</span>\n           <button onClick={this.playAgain}>Jouer Encore (Play Again)</button>\n         </div>\n        : ''}\n\n\n      </div>\n    );\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}